openapi: 3.0.0
info:
  title: Ecommerce API
  description: API endpoints for Shop Ecommerce including Cart Management
  version: 1.0.0
servers:
  - url: "https://shop-ecommerce.click/"
    description: Development Server

paths:
  /v1/api/products/search/{keysearch}:
    get:
      summary: Search products by keyword
      tags: [Products]
      parameters:
        - in: path
          name: keysearch
          required: true
          schema:
            type: string
          description: Keyword to search for products
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
  /v1/api/products/list-all:
    get:
      summary: Get list of all products
      tags: [Products]
      responses:
        '200':
          description: OK
        '400':
          description: Bad request

  /v1/api/products/create:
    post:
      summary: Create a new product
      tags: [Products]
      security:
        - Authorization: []
        - ClientIdHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  default: "Giay Da bong ToniKroos"
                product_thumb:
                  type: string
                  default: "Giay Da bong ToniKroos.png"
                product_description:
                  type: string
                  default: "Giay Da bong ToniKroos - bền bỉ, thoải mái, ôm chân"
                product_price:
                  type: number
                  default: 600000
                product_quantity:
                  type: integer
                  default: 100
                product_type:
                  type: string
                  default: "clothings"
                size:
                  type: array
                  items:
                    type: string
                  default: ["32", "31", "22"]
                brand:
                  type: string
                  default: "Jeans"
                material:
                  type: string
                  default: "Cotton"
                color:
                  type: array
                  items:
                    type: string
                  default: ["Đen", "Trắng", "RED"]
                isDraft:
                  type: boolean
                  default: true
                isPublished:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Product created successfully
        '400':
          description: Bad request

  /v1/api/products/delete:
    post:
      summary: Delete a product
      tags: [Products]
      security:
        - Authorization: []
        - ClientIdHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  description: "ID of the product to be deleted"
      responses:
        '200':
          description: Product deleted successfully
        '400':
          description: Bad request

  /v1/api/products/shop/draft-all:
    get:
      summary: Get list of all draft products of a shop
      tags: [Products]
      security:
        - Authorization: []
        - ClientIdHeader: []
      responses:
        '200':
          description: List of draft products retrieved successfully
        '400':
          description: Bad request

  /v1/api/products/shop/publish-all:
    get:
      summary: Get list of all published products of a shop
      tags: [Products]
      security:
        - Authorization: []
        - ClientIdHeader: []
      responses:
        '200':
          description: List of published products retrieved successfully
        '400':
          description: Bad request

  /v1/api/products/details:
    get:
      summary: Get details of a product
      tags: [Products]
      parameters:
        - in: query
          name: productId
          required: true
          schema:
            type: integer
          description: ID of the product to get details for
      responses:
        '200':
          description: Product details retrieved successfully
        '400':
          description: Bad request

  /v1/api/products/shop/publish-product:
    post:
      summary: Publish a product of a shop
      tags: [Products]
      security:
        - Authorization: []
        - ClientIdHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  default: 2
                  description: "ID of the product to be publish"
      responses:
        '200':
          description: Product publish successfully
        '400':
          description: Bad request
  /v1/api/products/shop/unpublish-product:
    post:
      summary: Unpublish a product of a shop
      tags: [Products]
      security:
        - Authorization: []
        - ClientIdHeader: []
      requestBody:
       required: true
       content:
         application/json:
           schema:
             type: object
             properties:
               productId:
                type: integer
                default: 2
      responses:
       '200':
         description: OK
       '400':
         description: Bad request
